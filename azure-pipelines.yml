################################################################################################################################################
# Template de Github Actions - Stack Completa de AppSec
# Elaboração:
# Emerson Xavier - emerson.xavier@keeggo.com
# Michel Santana - michel.santana@keeggo.com
#
# Stack de Ferramentas de App Sec:
# - Checkout do Código
# - Build da Aplicação Java
# - OpenText Debricked - Análise de Componentes de Terceiros
# - OpenText Fortify Static Code Analyzer - Análise Estática
# - Mobb Fixer - Correção Automatizada de Código
#
#
################################################################################################################################################

trigger:
- none
stages:
- stage: Build
  jobs:
    - job: Build
      displayName: Building IWA Project
 
      pool: Default
      steps:
      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'LocalDirectory'
          jdkFile: 'D:\Tools\jdk-17.0.12.7-hotspot.zip'
          jdkDestinationDirectory: 'D:\Tools\jdk-17.0.12.7-hotspot\'
      # Use Node.js ecosystem v0
      # Finds or downloads and caches the specified version spec of Node.js and adds it to the PATH.
      - task: NodeTool@0
        inputs:
          versionSource: 'spec' # 'spec' | 'fromFile'. Required. Source of version. Default: spec.
          #versionSpec: '6.x' # string. Optional. Use when versionSource = spec. Version Spec. Default: 6.x.
          #versionFilePath: # string. Optional. Use when versionSource = fromFile. Path to the .nvmrc file. 
          #checkLatest: false # boolean. Check for Latest Version. Default: false.
          #force32bit: false # boolean. Use 32 bit version on x64 agents. Default: false.
        # Advanced
          nodejsMirror: 'https://nodejs.org/dist' # string. Set source for Node.js binaries. Default: https://nodejs.org/dist.
          #retryCountOnDownloadFails: '5' # string. Set retry count when nodes downloads failed. Default: 5.
          #delayBetweenRetries: '1000' # string. Set delay between retries. Default: 1000.
      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'package'

    - job: SAST
      displayName: Fortify SAST
      dependsOn:
       - Build
      pool: Default
      container:
        #image: hello-world:latest
        image: fortifydocker/fortify-ci-tools:latest-jdk-17
        env:
          FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN: $(_FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN)
          FCLI_DEFAULT_SSC_CI_TOKEN: $(_FCLI_DEFAULT_SSC_CI_TOKEN)
          FCLI_DEFAULT_SSC_URL: $(_FCLI_DEFAULT_SSC_URL)
          FCLI_DEFAULT_SCC_URL: $(_FCLI_DEFAULT_SCC_URL)
          DEBRICKED_TOKEN: $(_DEBRICKED_TOKEN)
          SSC_APP_VERSION_ID: $(_SSC_APP_VERSION_ID)
          SC_SAST_SENSOR_VERSION: 24.2
      steps:
      - script: |
          java -version
          fcli -V
          debricked -v
          echo Loga no Fortify SSC e SC-SAST Controller
          fcli ssc session login --url=$(_FCLI_DEFAULT_SSC_URL) --ci-token=$(_FCLI_DEFAULT_SSC_CI_TOKEN)
          fcli sc-sast session login --client-auth-token=$(_FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN) --ssc-url=$(_FCLI_DEFAULT_SSC_URL) --ssc-ci-token=$(_FCLI_DEFAULT_SSC_CI_TOKEN)
          echo Empacota a Aplicação para o Scancentral
          scancentral package --build-tool none -o APP.zip
          echo Envia o Artefato para o Scancentral Controller
          fcli sc-sast scan start --package-file=APP.zip --sensor-version=24.2 --publish-to $(_SSC_APP_VERSION_ID) --ssc-ci-token=$(_FCLI_DEFAULT_SSC_CI_TOKEN) --store job:jobToken
          echo Debricked Scan
          debricked scan -t $(_DEBRICKED_TOKEN) -r=$(_SSC_APP_VERSION_ID) --commit=$(Build.SourceVersion)
          echo Importa os Resultados Debricked no SSC  
          fcli ssc artifact import-debricked -t $(_DEBRICKED_TOKEN) --av=$(_SSC_APP_VERSION_ID) -r=$(_SSC_APP_VERSION_ID) --branch=$(Build.SourceBranchName)
          echo Espera Scan Fortify Acabar  
          fcli sc-sast scan wait-for --any-ssc-state PROCESS_COMPLETE --timeout 2h ::job::jobToken --store sscArtifactId
          echo Consulta ID do Ultimo Artefacto
          fcli ssc artifact list --appversion $(_SSC_APP_VERSION_ID) --query "['scanTypes'].contains('SCA')" --output 'expr={id}\n' > out.txt
          echo Recuperação do Ultimo Artefacto Scaneado
          # run: fcli ssc artifact download "$(head -1 out.txt)" -f='app.fpr'
        displayName: Scan Central Scan
        continueOnError: true