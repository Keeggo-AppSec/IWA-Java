################################################################################################################################################
# Template de Github Actions - Stack Completa de AppSec
# Elaboração:
# Emerson Xavier - emerson.xavier@keeggo.com
# Michel Santana - michel.santana@keeggo.com
#
# Stack de Ferramentas de App Sec:
# - Checkout do Código
# - Build da Aplicação Java
# - OpenText Debricked - Análise de Componentes de Terceiros
# - OpenText Fortify Static Code Analyzer - Análise Estática
# - Mobb Fixer - Correção Automatizada de Código
#
#
################################################################################################################################################

trigger:
- none
stages:
- stage: Build
  jobs:
    - job: Build
      displayName: Building IWA Project
 
      pool: Default
      steps:
      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'LocalDirectory'
          jdkFile: 'D:\Tools\jdk-17.0.12.7-hotspot.zip'
          jdkDestinationDirectory: 'D:\Tools\jdk-17.0.12.7-hotspot\'
      # Use Node.js ecosystem v0
      # Finds or downloads and caches the specified version spec of Node.js and adds it to the PATH.
      - task: NodeTool@0
        inputs:
          versionSource: 'spec' # 'spec' | 'fromFile'. Required. Source of version. Default: spec.
          #versionSpec: '6.x' # string. Optional. Use when versionSource = spec. Version Spec. Default: 6.x.
          #versionFilePath: # string. Optional. Use when versionSource = fromFile. Path to the .nvmrc file. 
          #checkLatest: false # boolean. Check for Latest Version. Default: false.
          #force32bit: false # boolean. Use 32 bit version on x64 agents. Default: false.
        # Advanced
          #nodejsMirror: 'https://nodejs.org/dist' # string. Set source for Node.js binaries. Default: https://nodejs.org/dist.
          #retryCountOnDownloadFails: '5' # string. Set retry count when nodes downloads failed. Default: 5.
          #delayBetweenRetries: '1000' # string. Set delay between retries. Default: 1000.
      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'package'

    - job: SAST
      displayName: Fortify Scancentral SAST
      dependsOn:
       - Build
      pool: Default
      steps:
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            Write-Host --- Versão do Java ---
            java -version
            Write-Host --- Versão do FCLI ---
            fcli --version
            Write-Host --- Versão do DEBRICKED CLI ---
            debricked -v
            Write-Host --- Loga no Fortify SSC e SC-SAST Controller ---
            fcli ssc session login --url=${env:_FCLI_DEFAULT_SSC_URL} --ci-token=${env:_FCLI_DEFAULT_SSC_CI_TOKEN}
            fcli sc-sast session login --client-auth-token=$(_FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN) --ssc-url=${env:_FCLI_DEFAULT_SSC_URL} --ssc-ci-token=${env:_FCLI_DEFAULT_SSC_CI_TOKEN}
            Write-Host --- Empacota a Aplicação para o Scancentral ---
            scancentral package --output APP.zip
            Write-Host --- Envia o Artefato para o Scancentral Controller ---
            fcli sc-sast scan start --package-file=APP.zip --sensor-version=24.4 --publish-to=${env:_SSC_APP_VERSION_ID} --ssc-ci-token=${env:_FCLI_DEFAULT_SSC_CI_TOKEN} --store=job:jobToken
            Write-Host --- Debricked Scan ---
            debricked scan --access-token=${env:_DEBRICKED_TOKEN} --repository=${env:_SSC_APP_VERSION_ID} --commit=$(Build.SourceVersion)
            Write-Host --- Importa os Resultados Debricked no SSC  
            fcli ssc artifact import-debricked --debricked-access-token=${env:_DEBRICKED_TOKEN} --appversion=${env:_SSC_APP_VERSION_ID} --repository=${env:_SSC_APP_VERSION_ID} --branch=$(Build.SourceBranchName)
            Write-Host --- Espera Scan Fortify Acabar ---
            fcli sc-sast scan wait-for --any-ssc-state=PROCESS_COMPLETE --timeout=2h ::job::jobToken --store=sscArtifactId
            Write-Host --- Consulta ID do Ultimo Artefacto ---
            fcli ssc appversion refresh-metrics ${env:_SSC_APP_VERSION_ID}
            fcli ssc issue list --appversion=${env:_SSC_APP_VERSION_ID}
            Write-Host --- Recuperação do Ultimo Artefacto Scaneado ---
            fcli ssc appversion download-state --include-sources --file='app.fpr' ${env:_SSC_APP_VERSION_ID}
            Write-Host --- Envia FPR => Mobb.Ai ---
            npx mobbdev analyze --ci --scan-file=app.fpr --repo=${env:_CI_PROJECT_URL} --ref=$(Build.SourceVersion) --api-key=${env:MOBB_API_KEY}
