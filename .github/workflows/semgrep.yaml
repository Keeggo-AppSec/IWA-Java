################################################################################################################################################
# Template de Github Actions - Stack Completa de AppSec
# Elaboração:
# Emerson Xavier - emerson.xavier@keeggo.com
# Michel Santana - michel.santana@keeggo.com
#
# Stack de Ferramentas de App Sec:
# - Checkout do Código
# - Semgrep Scan Export Sarif
# - Build da Aplicação Java
# - SonarQube - Análise de Qualidade do Código
#
#
################################################################################################################################################

name: Semgrep + Sonar

# Gatilho de Disparo
on:
  workflow_dispatch:

# Steps
jobs:
  Build:
    # User definable name of this GitHub Actions job.
    name: Semgrep OSS Scan
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4
      # Step 2: Run Semgrep scan and output the results in SARIF format
      - name: Run in Docker container
        uses: docker://semgrep/semgrep  # Substitua pela sua imagem Docker
        with:
          args: semgrep scan --sarif --sarif-output=./src/iwa-java.sarif  # Substitua pelo comando que você deseja executar
      # Step 3: Setup Java
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 4: Set up Maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2

      # Step 5: Run the Maven verify phase
      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify

      # Step 6: Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Step 7: Cache SonarQube packages
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Step 8: Build and analyze with SonarQube
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=IWA-Java \
          -Dsonar.projectName='IWA-Java' \
          -Dsonar.sarifReportPaths='iwa-java.sarif'
